#!/bin/bash

set -e

## gh repo create will fail if origin exists
## i.e. if subdirectory of another git repository
## bypass this by creating a dummy repo without origin
## then delete the dummy repo

echo -en "\n## log in to github\n"

if [ -n "${CODESPACES}" ]; then
    echo -en "\n## codespaces detected\n"
    read -p "Clear GITHUB_TOKEN (y/n)?" choice
    case "$choice" in 
    y|Y ) export GITHUB_TOKEN=;;
    n|N ) echo "Attempting with existing credentials. May not be able to create repositories";;
    * ) echo "invalid";;
    esac
fi

gh auth status > /dev/null 2>&1 || gh auth login
[ -z "$(git config user.name)" ]  && git config --global user.name  "Autogenerated"
[ -z "$(git config user.email)" ] && git config --global user.email "noreply@nowhere.com"

echo -en "\n## create repositories GitHub\n"
git init &>/dev/null
gh repo create {{ github_public_repo }} --public --description "{{ class_name }} ({{ class_term }})"
rm -rf .git

git init &>/dev/null 
gh repo create {{ github_private_repo }} --private --description "{{ class_name }} ({{ class_term }})"
rm -rf .git

echo -en "\n## initialize git repository\n"
git init

echo -en "\n# add public/private remotes\n"
git remote add public-repo https://github.com/{{ github_public_repo }}.git
git remote add private-repo https://github.com/{{ github_private_repo }}.git
git remote -v

echo -en "\n## create/push public repository\n"
echo "# {{ class_name }} ({{ class_term }})" >> README.md
git add README.md
git commit -m "first commit"
git branch -M public
git push -u public-repo public

echo -en "\n## create/push private repository\n"
git checkout -b private

echo -en "\n# GitHub and DockerHub tokens\n"

echo -en "\nGitHub personal access token allows access to private repositories.\n"
echo -en "Instructions: https://docs.github.com/en/github/authenticating-to-github/creating-a-personal-access-token\n"
echo -en "Enter GitHub Personal Access Token: "
read MY_GITHUB_TOKEN
echo -en "\n"

echo -en "\nDockerHub access token for uploading Jupyter notebook docker images.\n"
echo -en "Instructions: https://docs.docker.com/docker-hub/access-tokens\n"
echo -en "Enter your DockerHub access token: "
read DOCKERHUB_ACCESS_TOKEN
echo -en "\n"

echo -en "\nGradescope grader images are stored privately.\n"
echo -en "Request a token from Sang-Yun Oh\n"
echo -en "Enter access token for 'ucsbgrader' user: "
read GRADER_ACCESS_TOKEN
echo -en "\n"

echo -en "\n# adding tokens to GitHub secrets\n"
gh secret set MY_GITHUB_TOKEN -b"${MY_GITHUB_TOKEN}"
gh secret set DOCKER_USERNAME -b"{{ dockerhub_username }}"
gh secret set DOCKER_ACCESS_TOKEN -b"${DOCKERHUB_ACCESS_TOKEN}"
gh secret set GRADER_ACCESS_TOKEN -b"${GRADER_ACCESS_TOKEN}"

echo -en "\n# pushing grader files to private\n"
git add .
git commit -m"initial grader files"
git push -u private-repo private
